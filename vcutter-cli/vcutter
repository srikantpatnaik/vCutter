#!/usr/bin/python -tt

import arguments
import os
import sys
from subprocess import Popen, PIPE

def selectOperation():
    argsObj = arguments.argParse()               #create object of argParse class
    cliArgs_list = argsObj.parse()                #catching return value of the fn
    flag = 'Option_%s' %(cliArgs_list[0])
    exec('process'+ flag + '(cliArgs_list)')      #calling a fn based on 1st integer arg




def processOption_1(cliArgs_list):
    ## eg: vcutter 1 -i inVideo.ogv -o outVideo.webm
    mustFlags = ['-o', '-i']                      #recommended flags for this option, in reverse order 
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    ## Now dirty irregular work, need to remove '-o'
    ## Presently works with 'ogv','wmv','avi'. Need to work on others
    inputFile  = cliArgs_list[cliArgs_list.index('-i') + 1]
    outputFile = cliArgs_list[cliArgs_list.index('-o') + 1]
    null       = '2&>/dev/null'
    
    execute = 'ffmpeg -i ' + inputFile + ' ' + outputFile + null 
    print execute
    os.system(execute) 

def processOption_2(cliArgs_list):
    ## eg: vcutter 2 -a smallClip.ogv -b  OrigVideo.ogv -o smallClipOrigVideo.ogv
    mustFlags = ['-o', '-b', '-a']               #recommended flags for this option, in reverse order 
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    Popen(finalArgs,stdout=PIPE)

    
def processOption_3(cliArgs_list):
    ## eg: vcutter 3 -c testVideo.ogv -t 23:59:55 23:59:59 -I newClip.ogv -o newVideo.ogv
    mustFlags = ['-o', '-I', '-t', '-c']                      #recommended flags for this option, in reverse order 
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    cliArgs_list = cliArgs_list[1:]
    cliArgs_list.remove('-o')
    cliArgs_list.insert(0,'ffmpeg')
    print cliArgs_list
    stdOut = Popen(cliArgs_list,stdout=PIPE)


def doubleCheck(mustFlags, cliArgs_list):
    ## The 'if' stmt is to check for correctness of user entered flags
    if not mustFlags == list(set(cliArgs_list) & set(mustFlags)):
        print 'Flags mismatch. Please see --help for examples.'
        sys.exit(1)
    else:
        cliArgs_list = cliArgs_list[1:]   # excluding first select option arg
    return cliArgs_list


if __name__ == "__main__":
    selectOperation()
