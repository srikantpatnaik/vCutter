#!/usr/bin/python -tt

import arguments
import os
import sys
from subprocess import Popen, PIPE

def selectOperation():
    argsObj          = arguments.argParse()               #create object of argParse class
    cliArgs_list     = argsObj.parse()                #catching return value of the fn
    flag = 'Option_%s' %(cliArgs_list[0])
    exec('process'+ flag + '(cliArgs_list)')      #calling a fn based on 1st integer arg




def processOption_1(cliArgs_list):
    ## eg: vcutter 1 -i inVideo.ogv -o outVideo.webm
    mustFlags = ['-i', '-o']   #recommended flags for this option
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    ## Presently works with 'ogv','wmv','avi'. Need to work on others
    inputFile        = cliArgs_list[cliArgs_list.index('-i') + 1]
    outputFile       = cliArgs_list[cliArgs_list.index('-o') + 1]
    execute = 'ffmpeg -i ' + inputFile + ' ' + outputFile 
    print execute
    os.system(execute) 

def processOption_2(cliArgs_list):
    ## eg: vcutter 2 -a smallClip.ogv -b  OrigVideo.ogv -o smallClipOrigVideo.ogv
    mustFlags = ['-a', '-b', '-o']             #recommended flags for this option
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    toBeAddedClipFile= finalArgs[finalArgs.index('-a') + 1]
    beginningOfFile  = finalArgs[finalArgs.index('-b') + 1]
    outputFile       = finalArgs[finalArgs.index('-o') + 1]
    execute1         = 'cat ' + toBeAddedClipFile + ' ' + beginningOfFile + '> '\
                         + '.rawAddedVideo'
    execute2         = 'mencoder -forceidx -oac copy -ovc copy ' + '.rawAddedVideo '\
                         + '-o ' + outputFile + '&& ' + 'rm .rawAddedVideo' 
    os.system(execute1)
    os.system(execute2)


    
def processOption_5(cliArgs_list):
    ## eg: vcutter 5 -c testVideo.ogv -t 23:59:55 23:59:59 -s -o newVideo.ogv
    mustFlags = ['-c', '-t', '-s', '-o']       #recommended flags for this option
    finalArgs = doubleCheck(mustFlags, cliArgs_list)
    toBeCutFile      = finalArgs[finalArgs.index('-c') + 1]
    timeInterval1    = finalArgs[finalArgs.index('-t') + 1]
    timeInterval2    = finalArgs[finalArgs.index('-t') + 2]
    outputFile       = finalArgs[finalArgs.index('-o') + 1]
    print timeInterval
    execute1         = 'ffmpeg -i ' + toBeCutFile  + ' .rawtoBeCutFile.mpg'
    execute2         = 'ffmpeg -i ' + '.rawtoBeCutFile.mpg ' + '-sameq -ss ' + timeInterval1 \
                        + ' -t ' + timeInterval2 ' + ' '.rawCutfile.mpg'
    execute3         = 'ffmpeg -i .rawCutfile.mpg ' + '-o ' + outputFile
    execute4         = 'rm .rawtoBeCutFile.mpg .rawCutfile.mpg' 
    os.system(execute1)
    os.system(execute2)
    os.system(execute3)
    os.system(execute4)

def doubleCheck(mustFlags, cliArgs_list):
    ## The 'if' stmt is to check for correctness of user entered flags
    comparedFlags = list(set(cliArgs_list) & set(mustFlags))
    if not mustFlags.sort() == comparedFlags.sort():
        print 'Flags mismatch. Please see --help for examples.'
        sys.exit(1)
    else:
        cliArgs_list = cliArgs_list[1:]   # excluding first select option arg
    return cliArgs_list


if __name__ == "__main__":
    selectOperation()
